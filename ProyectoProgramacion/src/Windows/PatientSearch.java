package Windows;

import Services.PatientsService;
import WindowsBackground.PatientSearch.PatientSearchBackgroundAbove;
import WindowsBackground.PatientSearch.PatientSearchBackgroundBelow;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.sun.xml.internal.ws.util.StringUtils;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 * @author JD101
 */
public class PatientSearch extends javax.swing.JFrame {

    /**
     * Creates new form PatientSearch
     *
     * @throws java.sql.SQLException
     */
    public PatientSearch() throws SQLException {
        initComponents();
        setLocationRelativeTo(null);
        initTablePatientsTable();
        textFieldSearchBar.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new PatientSearchBackgroundBelow();
        jPanel2 = new PatientSearchBackgroundAbove();
        comboBoxSearchFilter = new javax.swing.JComboBox<>();
        textFieldSearchBar = new javax.swing.JTextField();
        buttonSearchButton = new javax.swing.JButton();
        labelSearchFilter = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePatientsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Búsqueda de pacientes");
        setPreferredSize(new java.awt.Dimension(1080, 540));
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 510));

        jPanel2.setPreferredSize(new java.awt.Dimension(1020, 460));

        comboBoxSearchFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cédula", "Nombre", "Primer apellido", "Segundo apellido", "Nacionalidad", "Estado de la prueba" }));
        comboBoxSearchFilter.setPreferredSize(new java.awt.Dimension(70, 26));
        comboBoxSearchFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSearchFilterActionPerformed(evt);
            }
        });

        textFieldSearchBar.setMinimumSize(new java.awt.Dimension(70, 26));
        textFieldSearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSearchBarActionPerformed(evt);
            }
        });

        buttonSearchButton.setForeground(new java.awt.Color(255, 255, 255));
        buttonSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/PatientSearch/buttonSearchButton.png"))); // NOI18N
        buttonSearchButton.setText("Buscar");
        buttonSearchButton.setBorderPainted(false);
        buttonSearchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonSearchButton.setPreferredSize(new java.awt.Dimension(80, 26));
        buttonSearchButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/PatientSearch/buttonSearchButtonRollOver.png"))); // NOI18N
        buttonSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchButtonActionPerformed(evt);
            }
        });

        labelSearchFilter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSearchFilter.setText("Por:");
        labelSearchFilter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tablePatientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablePatientsTable);

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        jLabel1.setText("Busqueda de pacientes");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelSearchFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxSearchFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxSearchFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSearchFilter)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //  Own Code
    //  ------------------------------------------------------------------------
    /**
     * Inicializa la tabla con todos los datos que contiene la tabla patient.
     * @throws SQLException 
     * Controla los errores tipo SQL que se pudieran dar por la consulta de la 
     * información a la base de datos.
     */
    private void initTablePatientsTable() throws SQLException {

        PatientsService patientService = new PatientsService();
        DefaultTableModel model = patientService.showInformation();
        tablePatientsTable.setModel(model);

    }
    
    /**
     * Establece la tabla según los valores ingresados.
     * @param filterPosition
     * Indica la columna donde se va a buscar el texto a buscar.
     * @param searchText
     * Indica el texto a buscar en la tabla ingresada.
     * @throws SQLException 
     * Controla los errores tipo SQL que se pudieran dar por la consulta de la 
     * 
     */
    private void setTableByTheFilter(int filterPosition, String searchText) throws SQLException {
    
        PatientsService patientsService = new PatientsService();
        DefaultTableModel model = null;
        
        switch(filterPosition){
        
            case 0:
                model = patientsService.showInformationBy("id_patient", searchText);
                break;
                
            case 1:
                model = patientsService.showInformationBy("name_patient", searchText);
                break;
                
            case 2:
                model = patientsService.showInformationBy("first_lastname_patient", searchText);
                break;
                
            case 3:
                model = patientsService.showInformationBy("second_lastname_patient", searchText);
                break;
                
            case 4:
                model = patientsService.showInformationBy("nationality_patient", searchText);
                break;
                
            case 5:
                model = patientsService.showInformationBy("teststatus_patient", searchText);
                break;
                
        }
        
        tablePatientsTable.setModel(model);
        
    }

    /**
     * Establece la tabla con toda la información de la base de datos si el 
     * campo del texto a buscar está vacío. Si el texto a buscar no está vacío 
     * toma el filtro para poder decidir en cual tabla buscar el texto.
     * @param evt 
     */
    private void buttonSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchButtonActionPerformed

        String searchText = StringUtils.capitalize(textFieldSearchBar.getText());
        int filterPosition = comboBoxSearchFilter.getSelectedIndex();
        
        textFieldSearchBar.setText(searchText);
        
        if (textFieldSearchBar.getText().equals("")) {
            
            try {
                initTablePatientsTable();
            } catch (SQLException ex) {
                Logger.getLogger(PatientSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            
            try {
                setTableByTheFilter(filterPosition, searchText);
            } catch (SQLException ex) {
                Logger.getLogger(PatientSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }

    }//GEN-LAST:event_buttonSearchButtonActionPerformed

    private void textFieldSearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSearchBarActionPerformed
        textFieldSearchBar.transferFocus();
    }//GEN-LAST:event_textFieldSearchBarActionPerformed

    private void comboBoxSearchFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSearchFilterActionPerformed
        comboBoxSearchFilter.transferFocus();
    }//GEN-LAST:event_comboBoxSearchFilterActionPerformed
    //  ------------------------------------------------------------------------
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            UIManager.setLookAndFeel(new FlatIntelliJLaf());

        } catch (UnsupportedLookAndFeelException ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new PatientSearch().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(PatientSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSearchButton;
    private javax.swing.JComboBox<String> comboBoxSearchFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelSearchFilter;
    private javax.swing.JTable tablePatientsTable;
    private javax.swing.JTextField textFieldSearchBar;
    // End of variables declaration//GEN-END:variables
}

