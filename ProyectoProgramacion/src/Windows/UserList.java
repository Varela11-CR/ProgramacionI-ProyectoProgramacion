/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Windows;

import Models.User;
import Services.UsersService;
import Utilities.WindowsBackground.CustomPanel;
import com.formdev.flatlaf.FlatIntelliJLaf;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JD101
 */
public class UserList extends javax.swing.JFrame {

    //  Variables and Objects
    //  ------------------------------------------------------------------------
    private User user;
    private User userForChange;
    //  ------------------------------------------------------------------------

    /**
     * Creates new form UserList
     */
    public UserList() {
        
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Images/Logo/logo.png")).getImage());
        
    }

    public UserList(JFrame window, User user) throws SQLException {

        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Images/Logo/logo.png")).getImage());
        lockComponents();
        initTable();
        setLocationRelativeTo(window);

        this.user = user;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackgroundBelow = new CustomPanel("/Images/UserList/backgroundBelow.png");
        panelBackgroundAbove = new CustomPanel("/Images/UserList/background.png");
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        buttonAdd = new javax.swing.JButton();
        buttonModify = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Usuarios");
        setResizable(false);

        panelBackgroundBelow.setPreferredSize(new java.awt.Dimension(700, 500));

        panelBackgroundAbove.setPreferredSize(new java.awt.Dimension(600, 400));

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableUsers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableUsers.getTableHeader().setReorderingAllowed(false);
        tableUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableUsers);

        buttonAdd.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        buttonAdd.setForeground(new java.awt.Color(255, 255, 255));
        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/button.png"))); // NOI18N
        buttonAdd.setText("Añadir");
        buttonAdd.setBorder(null);
        buttonAdd.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonDisabled.png"))); // NOI18N
        buttonAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAdd.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonRollOver.png"))); // NOI18N
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonModify.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        buttonModify.setForeground(new java.awt.Color(255, 255, 255));
        buttonModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/button.png"))); // NOI18N
        buttonModify.setText("Modificar");
        buttonModify.setBorder(null);
        buttonModify.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonDisabled.png"))); // NOI18N
        buttonModify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonModify.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonRollOver.png"))); // NOI18N
        buttonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModifyActionPerformed(evt);
            }
        });

        buttonRemove.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        buttonRemove.setForeground(new java.awt.Color(255, 255, 255));
        buttonRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/button.png"))); // NOI18N
        buttonRemove.setText("Eliminar");
        buttonRemove.setBorder(null);
        buttonRemove.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonDisabled.png"))); // NOI18N
        buttonRemove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonRemove.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonRollOver.png"))); // NOI18N
        buttonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveActionPerformed(evt);
            }
        });

        buttonExit.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        buttonExit.setForeground(new java.awt.Color(255, 255, 255));
        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/button.png"))); // NOI18N
        buttonExit.setText("Atrás");
        buttonExit.setBorder(null);
        buttonExit.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonDisabled.png"))); // NOI18N
        buttonExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonExit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UserList/buttonRollOver.png"))); // NOI18N
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBackgroundAboveLayout = new javax.swing.GroupLayout(panelBackgroundAbove);
        panelBackgroundAbove.setLayout(panelBackgroundAboveLayout);
        panelBackgroundAboveLayout.setHorizontalGroup(
            panelBackgroundAboveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundAboveLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(panelBackgroundAboveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAdd)
                    .addComponent(buttonModify)
                    .addComponent(buttonRemove)
                    .addComponent(buttonExit))
                .addGap(40, 40, 40))
        );
        panelBackgroundAboveLayout.setVerticalGroup(
            panelBackgroundAboveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundAboveLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelBackgroundAboveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBackgroundAboveLayout.createSequentialGroup()
                        .addComponent(buttonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonModify)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonExit))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelBackgroundBelowLayout = new javax.swing.GroupLayout(panelBackgroundBelow);
        panelBackgroundBelow.setLayout(panelBackgroundBelowLayout);
        panelBackgroundBelowLayout.setHorizontalGroup(
            panelBackgroundBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundBelowLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(panelBackgroundAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        panelBackgroundBelowLayout.setVerticalGroup(
            panelBackgroundBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundBelowLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(panelBackgroundAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBackgroundBelow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBackgroundBelow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //  Own Code
    //  ------------------------------------------------------------------------
    /**
     * Bloquea los botones de modificar y eliminar.
     */
    private void lockComponents() {

        this.buttonModify.setEnabled(false);
        this.buttonRemove.setEnabled(false);

    }

    /**
     * Desbloquea los botones de modificar y eliminar.
     */
    private void unlockComponents() {

        this.buttonModify.setEnabled(true);
        this.buttonRemove.setEnabled(true);

    }

    /**
     * Inicializa la tabla mostrando el nombre de usuario y los permisos del
     * usuario, estos datos tomados de la tabla users.
     *
     * @throws SQLException Controla los errores tipo SQL que se pudieran dar
     * por la consulta de la información a la base de datos.
     */
    public void initTable() throws SQLException {

        UsersService usersService = new UsersService();
        DefaultTableModel model = usersService.showInformation();
        this.tableUsers.setModel(model);

    }

    /**
     * Crea un objeto de tipo User y rellena los atributos de este de acuerdo
     * con la fila que hay seleccionada en la tabla.
     *
     * @return Retorna un objeto de tipo User con sus atributos llenos.
     */
    private User getUserData() {

        User userTemp = new User();
        int rowTable = tableUsers.getSelectedRow();
        int permissions;

        userTemp.setUserName(tableUsers.getValueAt(rowTable, 0).toString());

        if (tableUsers.getValueAt(rowTable, 1).toString().equals("Si")) {
            userTemp.setPermissions(1);
        } else {
            userTemp.setPermissions(0);
        }

        return userTemp;

    }

    /**
     * Crea un objeto de tipo User y rellena sus atributos con el método
     * getUserData(), luego realiza la eliminación del registro.
     *
     * @throws SQLException Controla los errores tipo SQL que se pudieran dar
     * por la eliminación del registro de la base de datos.
     */
    private void removeUser() throws SQLException {

        UsersService usersService = new UsersService();
        User user = getUserData();
        usersService.deleteUser(user);

    }

    /**
     * Cierra este formulario e instancia uno nuevo de tipo Menu, y lo hace
     * visible.
     *
     * @param evt
     */
    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed

        this.dispose();

        Menu formMenu = new Menu(this, this.user);
        formMenu.setVisible(true);

    }//GEN-LAST:event_buttonExitActionPerformed

    /**
     * Desbloquea los botones modificar y eliminar cuando presiona alguna celda
     * la tabla.
     *
     * @param evt
     */
    private void tableUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUsersMouseClicked
        unlockComponents();
    }//GEN-LAST:event_tableUsersMouseClicked

    /**
     * Crea un nuevo formulario de tipo UserAdministration pasando como
     * parámetro del constructor el formulario actual, luego al nuevo formulario
     * lo hace visible.
     *
     * @param evt
     */
    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed

        UserAdministration formUserAdministration = new UserAdministration(this);
        formUserAdministration.setVisible(true);

    }//GEN-LAST:event_buttonAddActionPerformed

    /**
     * Crea un objeto de tipo User y rellena sus atributos con el método
     * getUserData(), luego instancia un formulario de tipo UserAdministration
     * pasandole este formulario y el objeto creado al constructor, al
     * formulario creado lo hace visible.
     *
     * @param evt
     */
    private void buttonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModifyActionPerformed

        this.userForChange = getUserData();

        UserAdministration formUserAdministration = new UserAdministration(this, this.userForChange);
        formUserAdministration.setVisible(true);

    }//GEN-LAST:event_buttonModifyActionPerformed

    /**
     * Lanza un mensaje de confirmación al presionar el botón eliminar para
     * eliminar o no el registro seleccionado de la tabla. Al eliminar el
     * registro lanza la confirmación y en el caso contrario también.
     *
     * @param evt
     */
    private void buttonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveActionPerformed

        int option = JOptionPane.showConfirmDialog(this,
                "Desea eliminar al usuario?", "", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.YES_NO_OPTION);

        if (option == 0) {

            try {

                removeUser();
                initTable();

            } catch (SQLException ex) {
                Logger.getLogger(UserList.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Usuario no eliminado.");
        }

    }//GEN-LAST:event_buttonRemoveActionPerformed
    //  ------------------------------------------------------------------------

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            UIManager.setLookAndFeel(new FlatIntelliJLaf());

        } catch (UnsupportedLookAndFeelException ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonModify;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelBackgroundAbove;
    private javax.swing.JPanel panelBackgroundBelow;
    private javax.swing.JTable tableUsers;
    // End of variables declaration//GEN-END:variables
}
